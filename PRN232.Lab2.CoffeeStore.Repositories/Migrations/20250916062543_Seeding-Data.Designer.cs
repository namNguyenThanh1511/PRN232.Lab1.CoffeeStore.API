// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PRN232.Lab2.CoffeeStore.Repositories;

#nullable disable

namespace PRN232.Lab1.CoffeeStore.Data.Migrations
{
    [DbContext(typeof(CoffeStoreDbContext))]
    [Migration("20250916062543_Seeding-Data")]
    partial class SeedingData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PRN232.Lab1.CoffeeStore.Data.Entities.Category", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Category", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("11111111-1111-1111-1111-111111111111"),
                            Description = "Coffee drinks like espresso, latte, cappuccino.",
                            Name = "Coffee"
                        },
                        new
                        {
                            Id = new Guid("22222222-2222-2222-2222-222222222222"),
                            Description = "Black tea, green tea, and herbal teas.",
                            Name = "Tea"
                        },
                        new
                        {
                            Id = new Guid("33333333-3333-3333-3333-333333333333"),
                            Description = "Fresh fruit and vegetable juices.",
                            Name = "Juice"
                        },
                        new
                        {
                            Id = new Guid("44444444-4444-4444-4444-444444444444"),
                            Description = "Blended fruit smoothies with yogurt or milk.",
                            Name = "Smoothies"
                        },
                        new
                        {
                            Id = new Guid("55555555-5555-5555-5555-555555555555"),
                            Description = "Cakes, breads, croissants, and pastries.",
                            Name = "Bakery"
                        },
                        new
                        {
                            Id = new Guid("66666666-6666-6666-6666-666666666666"),
                            Description = "Fresh sandwiches with meats and veggies.",
                            Name = "Sandwich"
                        },
                        new
                        {
                            Id = new Guid("77777777-7777-7777-7777-777777777777"),
                            Description = "Italian pasta dishes with different sauces.",
                            Name = "Pasta"
                        },
                        new
                        {
                            Id = new Guid("88888888-8888-8888-8888-888888888888"),
                            Description = "Thin crust and deep dish pizzas.",
                            Name = "Pizza"
                        },
                        new
                        {
                            Id = new Guid("99999999-9999-9999-9999-999999999999"),
                            Description = "Fresh and healthy salads.",
                            Name = "Salad"
                        },
                        new
                        {
                            Id = new Guid("aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaaa"),
                            Description = "Warm soups for all seasons.",
                            Name = "Soup"
                        });
                });

            modelBuilder.Entity("PRN232.Lab1.CoffeeStore.Data.Entities.Menu", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("FromDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("ToDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Menu", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("bbbbbbbb-bbbb-bbbb-bbbb-bbbbbbbbbbbb"),
                            FromDate = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Breakfast Menu",
                            ToDate = new DateTime(2025, 12, 31, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("cccccccc-cccc-cccc-cccc-cccccccccccc"),
                            FromDate = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Lunch Menu",
                            ToDate = new DateTime(2025, 12, 31, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("dddddddd-dddd-dddd-dddd-dddddddddddd"),
                            FromDate = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Dinner Menu",
                            ToDate = new DateTime(2025, 12, 31, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("eeeeeeee-eeee-eeee-eeee-eeeeeeeeeeee"),
                            FromDate = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Drinks Menu",
                            ToDate = new DateTime(2025, 12, 31, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("ffffffff-ffff-ffff-ffff-ffffffffffff"),
                            FromDate = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Dessert Menu",
                            ToDate = new DateTime(2025, 12, 31, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("12121212-1212-1212-1212-121212121212"),
                            FromDate = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Weekend Specials",
                            ToDate = new DateTime(2025, 12, 31, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("13131313-1313-1313-1313-131313131313"),
                            FromDate = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Vegan Menu",
                            ToDate = new DateTime(2025, 12, 31, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("14141414-1414-1414-1414-141414141414"),
                            FromDate = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Kids Menu",
                            ToDate = new DateTime(2025, 12, 31, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("15151515-1515-1515-1515-151515151515"),
                            FromDate = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Happy Hour Menu",
                            ToDate = new DateTime(2025, 12, 31, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("16161616-1616-1616-1616-161616161616"),
                            FromDate = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Seasonal Menu",
                            ToDate = new DateTime(2025, 12, 31, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("PRN232.Lab1.CoffeeStore.Data.Entities.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Product", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("17171717-1717-1717-1717-171717171717"),
                            CategoryId = new Guid("11111111-1111-1111-1111-111111111111"),
                            Description = "Strong black coffee",
                            Name = "Espresso",
                            Price = 2.5m
                        },
                        new
                        {
                            Id = new Guid("18181818-1818-1818-1818-181818181818"),
                            CategoryId = new Guid("11111111-1111-1111-1111-111111111111"),
                            Description = "Coffee with steamed milk",
                            Name = "Latte",
                            Price = 3m
                        },
                        new
                        {
                            Id = new Guid("19191919-1919-1919-1919-191919191919"),
                            CategoryId = new Guid("22222222-2222-2222-2222-222222222222"),
                            Description = "Refreshing green tea",
                            Name = "Green Tea",
                            Price = 1.8m
                        },
                        new
                        {
                            Id = new Guid("20202020-2020-2020-2020-202020202020"),
                            CategoryId = new Guid("33333333-3333-3333-3333-333333333333"),
                            Description = "Fresh squeezed orange juice",
                            Name = "Orange Juice",
                            Price = 2.2m
                        },
                        new
                        {
                            Id = new Guid("21212121-2121-2121-2121-212121212121"),
                            CategoryId = new Guid("44444444-4444-4444-4444-444444444444"),
                            Description = "Mixed berry smoothie",
                            Name = "Berry Smoothie",
                            Price = 3.5m
                        },
                        new
                        {
                            Id = new Guid("22222222-3333-4444-5555-666666666666"),
                            CategoryId = new Guid("55555555-5555-5555-5555-555555555555"),
                            Description = "Buttery French pastry",
                            Name = "Croissant",
                            Price = 1.5m
                        },
                        new
                        {
                            Id = new Guid("23232323-2323-2323-2323-232323232323"),
                            CategoryId = new Guid("66666666-6666-6666-6666-666666666666"),
                            Description = "Triple-decker sandwich",
                            Name = "Club Sandwich",
                            Price = 4.5m
                        },
                        new
                        {
                            Id = new Guid("24242424-2424-2424-2424-242424242424"),
                            CategoryId = new Guid("77777777-7777-7777-7777-777777777777"),
                            Description = "Classic Italian pasta",
                            Name = "Spaghetti Bolognese",
                            Price = 6.5m
                        },
                        new
                        {
                            Id = new Guid("25252525-2525-2525-2525-252525252525"),
                            CategoryId = new Guid("88888888-8888-8888-8888-888888888888"),
                            Description = "Cheese and tomato pizza",
                            Name = "Margherita Pizza",
                            Price = 7m
                        },
                        new
                        {
                            Id = new Guid("26262626-2626-2626-2626-262626262626"),
                            CategoryId = new Guid("99999999-9999-9999-9999-999999999999"),
                            Description = "Salad with romaine lettuce and dressing",
                            Name = "Caesar Salad",
                            Price = 5m
                        });
                });

            modelBuilder.Entity("PRN232.Lab1.CoffeeStore.Data.Entities.ProductInMenu", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("MenuId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MenuId");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductInMenu", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("27272727-2727-2727-2727-272727272727"),
                            MenuId = new Guid("bbbbbbbb-bbbb-bbbb-bbbb-bbbbbbbbbbbb"),
                            ProductId = new Guid("17171717-1717-1717-1717-171717171717"),
                            Quantity = 50
                        },
                        new
                        {
                            Id = new Guid("28282828-2828-2828-2828-282828282828"),
                            MenuId = new Guid("bbbbbbbb-bbbb-bbbb-bbbb-bbbbbbbbbbbb"),
                            ProductId = new Guid("18181818-1818-1818-1818-181818181818"),
                            Quantity = 40
                        },
                        new
                        {
                            Id = new Guid("29292929-2929-2929-2929-292929292929"),
                            MenuId = new Guid("cccccccc-cccc-cccc-cccc-cccccccccccc"),
                            ProductId = new Guid("19191919-1919-1919-1919-191919191919"),
                            Quantity = 60
                        },
                        new
                        {
                            Id = new Guid("30303030-3030-3030-3030-303030303030"),
                            MenuId = new Guid("cccccccc-cccc-cccc-cccc-cccccccccccc"),
                            ProductId = new Guid("20202020-2020-2020-2020-202020202020"),
                            Quantity = 70
                        },
                        new
                        {
                            Id = new Guid("31313131-3131-3131-3131-313131313131"),
                            MenuId = new Guid("dddddddd-dddd-dddd-dddd-dddddddddddd"),
                            ProductId = new Guid("21212121-2121-2121-2121-212121212121"),
                            Quantity = 30
                        },
                        new
                        {
                            Id = new Guid("32323232-3232-3232-3232-323232323232"),
                            MenuId = new Guid("eeeeeeee-eeee-eeee-eeee-eeeeeeeeeeee"),
                            ProductId = new Guid("22222222-3333-4444-5555-666666666666"),
                            Quantity = 80
                        },
                        new
                        {
                            Id = new Guid("33333333-3333-4444-5555-666666666666"),
                            MenuId = new Guid("12121212-1212-1212-1212-121212121212"),
                            ProductId = new Guid("23232323-2323-2323-2323-232323232323"),
                            Quantity = 25
                        },
                        new
                        {
                            Id = new Guid("34343434-3434-3434-3434-343434343434"),
                            MenuId = new Guid("12121212-1212-1212-1212-121212121212"),
                            ProductId = new Guid("24242424-2424-2424-2424-242424242424"),
                            Quantity = 20
                        },
                        new
                        {
                            Id = new Guid("35353535-3535-3535-3535-353535353535"),
                            MenuId = new Guid("14141414-1414-1414-1414-141414141414"),
                            ProductId = new Guid("25252525-2525-2525-2525-252525252525"),
                            Quantity = 15
                        },
                        new
                        {
                            Id = new Guid("36363636-3636-3636-3636-363636363636"),
                            MenuId = new Guid("15151515-1515-1515-1515-151515151515"),
                            ProductId = new Guid("26262626-2626-2626-2626-262626262626"),
                            Quantity = 35
                        });
                });

            modelBuilder.Entity("PRN232.Lab1.CoffeeStore.Data.Entities.Product", b =>
                {
                    b.HasOne("PRN232.Lab1.CoffeeStore.Data.Entities.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Category");
                });

            modelBuilder.Entity("PRN232.Lab1.CoffeeStore.Data.Entities.ProductInMenu", b =>
                {
                    b.HasOne("PRN232.Lab1.CoffeeStore.Data.Entities.Menu", "Menu")
                        .WithMany()
                        .HasForeignKey("MenuId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("PRN232.Lab1.CoffeeStore.Data.Entities.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Menu");

                    b.Navigation("Product");
                });
#pragma warning restore 612, 618
        }
    }
}

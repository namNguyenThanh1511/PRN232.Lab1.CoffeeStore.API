name: Deploy ASP.NET Core to Windows EC2 with IIS Reverse Proxy

on:
  push:
    branches: ["main"]

jobs:
  build:
    name: Build & Test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup .NET 8 SDK
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x

      - name: Restore dependencies
        run: dotnet restore

      - name: Build solution
        run: dotnet build --configuration Release --no-restore

      - name: Run tests
        run: dotnet test --no-build --verbosity normal

      - name: Publish app
        run: dotnet publish -c Release -o ./publish

      - name: Archive artifact
        uses: actions/upload-artifact@v4
        with:
          name: published-app
          path: ./publish

  deploy:
    name: Deploy to EC2 Windows Server
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download published artifact
        uses: actions/download-artifact@v4
        with:
          name: published-app
          path: ./publish

      - name: Deploy to EC2 via SSH
        env:
          PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          EC2_HOST: ${{ secrets.EC2_WINDOWS_IP }}
          EC2_USER: ${{ secrets.EC2_WINDOWS_USER }}
        run: |
          echo "$PRIVATE_KEY" > private_key.pem
          chmod 600 private_key.pem

          echo "=== Copy published files to EC2 ==="
          scp -i private_key.pem -o StrictHostKeyChecking=no -r ./publish $EC2_USER@$EC2_HOST:/C:/deploy/publish

          echo "=== Connecting to EC2 and running Docker ==="
          ssh -i private_key.pem -o StrictHostKeyChecking=no $EC2_USER@$EC2_HOST powershell -Command "
            Write-Host '=== Deploying on EC2 ==='
            cd C:\\deploy
            if (!(Test-Path 'docker-compose.yml')) {
              Write-Host 'No docker-compose.yml found, cloning repo...'
              git clone https://github.com/${{ github.repository }} .
            } else {
              git pull origin main
            }
            Write-Host '=== Replace publish folder ==='
            if (Test-Path .\\publish) { Remove-Item -Recurse -Force .\\publish }
            Move-Item C:\\deploy\\publish .\\publish
            Write-Host '=== Restart Docker containers ==='
            docker-compose down
            docker-compose up -d --build
            docker ps
          "

      - name: Deployment finished
        run: echo "âœ… Deployment completed successfully!"
